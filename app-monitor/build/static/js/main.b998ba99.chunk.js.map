{"version":3,"sources":["Container.js","App.js","Root.js","index.js"],"names":["useStyles","makeStyles","root","display","margin","width","fontSize","fontWeight","color","textDecoration","maxHeight","background","borderRadius","hide","headerRed","backgroundColor","headerBlue","headerGreen","subHeader","Container","host","container","port","token","setParent","setState","index","showAllLogs","classes","useState","console","lastLog","state","currentIndex","rows","config","setConfig","showLogs","hideLogs","fetchLogs","undefined","a","Promise","all","window","axios","method","params","resolve","data","then","response","status","lastRun","moment","replace","isValid","add","includes","id","catch","textarea","document","getElementById","scrollTop","scrollHeight","displayLogs","useEffect","setInterval","Card","className","CardHeader","title","target","onClick","event","stopPropagation","href","style","cursor","avatar","subheader","CardContent","readOnly","cols","value","header","marginTop","paddingTop","paddingBottom","position","marginBottom","padding","progress","App","page","setActive","configuration","servers","ports","containers","NodeList","setNodes","processed","setProcessed","count","setCount","hideAllLogs","format","startDate","setStartDate","Array","range","start","end","from","length","v","k","setParentState","child","filter","st","changeDate","newDate","utcOffset","StartDate","EndDate","endOf","fetchTokens","tokens","nodes","ind","i","sessionStorage","push","post","jwt","forEach","server","toString","fetchProcessed","split","Total","Running","Stopped","Finished","Typography","variant","gutterBottom","align","onChange","type","float","marginRight","map","item","Button","LinearProgress","Root","activePage","location","hash","parseInt","reload","ReactDOM","render"],"mappings":"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","file":"static/js/main.b998ba99.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Card, CardHeader, CardContent } from '@material-ui/core';\r\nimport DesktopWindows from '@material-ui/icons/DesktopWindows';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport axios from \"axios\";\r\nimport moment from 'moment';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        display: 'inline-block',\r\n        margin: '20px 32px',\r\n        width: '336px',\r\n        \"& a\": {\r\n            fontSize: \"20px\",\r\n            fontWeight: \"bold\",\r\n            color: \"rgb(26 35 126)\",\r\n            textDecoration: \"none\",\r\n            \"& svg\": {\r\n                color: \"#000\",\r\n            }\r\n        },\r\n        \"& strong\": {\r\n            color: \"#000\"\r\n        },\r\n        \"& textarea\": {\r\n            \"&::-webkit-scrollbar\": {\r\n                width: \"7px\",\r\n                maxHeight: \"72px\"\r\n            },\r\n            \"&::-webkit-scrollbar-thumb\": {\r\n                background: \"rgba(0, 0, 0, 0.5)\",\r\n                borderRadius: \"3.5px\"\r\n            },\r\n            \"&::-webkit-scrollbar-track\": {\r\n                background: \"#fff\"\r\n            }\r\n        }\r\n    },\r\n    hide: {\r\n        display: \"none\"\r\n    },\r\n    headerRed: {\r\n        backgroundColor: \"rgb(245 205 210)\"\r\n    },\r\n    headerBlue: {\r\n        backgroundColor: \"rgb(187 222 251)\"\r\n    },\r\n    headerGreen: {\r\n        backgroundColor: \"rgb(204 254 144)\"\r\n    },\r\n    subHeader: {\r\n        // color: \"rgb(74 20 140) !important\"\r\n    }\r\n});\r\n\r\nconst Container = ({ host, container, port, token, setState: setParent, index, showAllLogs }) => {\r\n    const classes = useStyles();\r\n    const [state, setState] = useState({\r\n        console: \"\",\r\n        lastLog: \"\"\r\n    });\r\n    const [config, setConfig] = useState({\r\n        currentIndex: 0,\r\n        rows: 0,\r\n    });\r\n    const [showLogs, hideLogs] = useState(showAllLogs);\r\n    const fetchLogs = (showLogs) => {\r\n        if (showLogs !== undefined)\r\n            hideLogs(showLogs);\r\n        (async () => {\r\n            await Promise.all([\r\n                window[`${host}_${container}`] ? axios('http://34.227.172.54:4000', {\r\n                    method: 'GET',\r\n                    params: { host, container, token }\r\n                }) : Promise.resolve({ data: \"\" }),\r\n                axios('http://34.227.172.54:4000/last', {\r\n                    method: 'GET',\r\n                    params: { host, container, token }\r\n                }),\r\n                axios('http://34.227.172.54:4000/config', {\r\n                    method: 'GET',\r\n                    params: { host, port }\r\n                })\r\n            ])\r\n                .then(function (response) {\r\n                    const lastRun = moment(response[1].data.replace(/.* \\| /gm, '').replace(/\\r\\n/gm, ''));\r\n                    let lastLog = \"\", status\r\n                    if (lastRun.isValid() && lastRun > moment().add(-5, 'minutes')) {\r\n                        status = \"Running\"\r\n                        lastLog = classes.headerBlue\r\n                    }\r\n                    else {\r\n                        status = \"Stopped\"\r\n                        lastLog = classes.headerRed\r\n                    }\r\n                    if (response[1].data.includes('Exporting Finished')) {\r\n                        status = \"Finished\"\r\n                        lastLog = classes.headerGreen\r\n                    }\r\n                    setParent({\r\n                        id: `${host}_${container}`,\r\n                        state: response[1].data ? status : undefined\r\n                    })\r\n                    setState({\r\n                        ...state,\r\n                        console: response[0].data,\r\n                        lastLog,\r\n                    });\r\n                    const { data: { currentIndex, rows } } = response[2];\r\n                    setConfig({\r\n                        ...config,\r\n                        currentIndex,\r\n                        rows\r\n                    })\r\n                })\r\n                .catch(() => { });\r\n            const textarea = document.getElementById(`${host}_${container}`);\r\n            if (textarea)\r\n                textarea.scrollTop = textarea.scrollHeight;\r\n        })();\r\n    }\r\n\r\n    const displayLogs = showAllLogs => () => {\r\n        if (showAllLogs !== undefined) {\r\n            window[`${host}_${container}`] = showAllLogs;\r\n            fetchLogs(showAllLogs)\r\n        } else {\r\n            window[`${host}_${container}`] = !window[`${host}_${container}`];\r\n            fetchLogs(!showLogs)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        displayLogs(showAllLogs)();\r\n        setInterval(fetchLogs, 10000);\r\n    }, [showAllLogs])\r\n\r\n    return <Card className={classes.root}>\r\n        <CardHeader\r\n            title={<a\r\n                target=\"blank\"\r\n                onClick={event => event.stopPropagation()}\r\n                href={`http://${host}:${port}`}>\r\n                {`http://${host}:${port}`}\r\n            </a>}\r\n            className={state.lastLog}\r\n            style={{ cursor: \"pointer\" }}\r\n            onClick={displayLogs()}\r\n            avatar={<a\r\n                target=\"blank\"\r\n                onClick={event => event.stopPropagation()}\r\n                href={`http://${host}:9000/#/containers/${container}/exec`}>\r\n                <DesktopWindows />\r\n            </a>}\r\n            subheader={<strong>\r\n                {`#${index} | ${container} | ${config.rows || 0} | ${config.currentIndex && config.currentIndex + 1}`}\r\n            </strong>}\r\n        />\r\n        {showLogs && <CardContent>\r\n            <textarea readOnly rows=\"15\" cols=\"40\" value={state.console} id={`${host}_${container}`} />\r\n        </CardContent>}\r\n    </Card>\r\n}\r\n\r\nexport default Container;","import { useEffect, useState } from \"react\";\nimport moment from \"moment\";\nimport { Button, Container as AppContainer, LinearProgress, Typography } from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport axios from \"axios\";\n\nimport Container from \"./Container\";\n\nconst useStyles = makeStyles({\n  header: {\n    backgroundColor: \"white\",\n    marginTop: \"-140px\",\n    paddingTop: \"10px\",\n    paddingBottom: \"24px\",\n    position: \"fixed\",\n    width: \"100%\"\n  },\n  root: {\n    backgroundColor: \"#E0E0E0\",\n    borderRadius: \"4px\",\n    marginTop: \"140px\",\n    marginBottom: \"40px\",\n    padding: \"20px 36px 12px\"\n  },\n  progress: {\n    margin: \"44px\",\n    marginTop: \"60px\"\n  }\n});\n\nconst App = ({ page, setActive }) => {\n  const classes = useStyles();\n  const { servers, ports, containers } = window.configuration;\n  const [NodeList, setNodes] = useState([]);\n  let [state, setState] = useState([]);\n  const [processed, setProcessed] = useState(0);\n  const [count, setCount] = useState(0);\n  const [showAllLogs, hideAllLogs] = useState(false);\n  const [startDate, setStartDate] = useState(moment().format(\"YYYY-MM-DDTHH:mm\"));\n\n  Array.range = (start, end) => Array.from({ length: (end - start) }, (v, k) => k + start);\n\n  const setParentState = child => {\n    state = [...state.filter(st => st.id !== child.id), child];\n    setState(state);\n  }\n\n  const changeDate = ({ target: { value } }) => {\n    const newDate = moment(value).utcOffset('+00:00').format(\"YYYY-MM-DDTHH:mm\");\n    axios('http://34.227.172.54:4000/processed', {\n      method: 'POST',\n      params: {\n        StartDate: newDate,\n        EndDate: moment().utcOffset('+00:00').endOf('day').format('YYYY-MM-DDTHH:mm')\n      }\n    })\n      .then(function (response) {\n        setCount(response.data);\n      })\n      .catch(() => { });\n    setStartDate(moment(value).format(\"YYYY-MM-DDTHH:mm\"));\n  }\n\n  useEffect(() => {\n    const fetchTokens = async () => {\n      const tokens = [], nodes = []\n      let ind = 0;\n      for (let i = (page - 1) * 6; i < servers.length && i < page * 6; i++) {\n        if (sessionStorage[`${servers[i]}_token`]) {\n          tokens.push({\n            host: servers[i],\n            token: sessionStorage[`${servers[i]}_token`]\n          });\n        }\n        else {\n          await axios.post(`http://34.227.172.54:4000`, null, {\n            params: {\n              host: servers[i]\n            }\n          })\n            .then(function (response) {\n              sessionStorage[`${servers[i]}_token`] = response.data.jwt;\n              tokens.push({\n                host: servers[i],\n                token: response.data.jwt\n              });\n            })\n            .catch(() => { });\n        }\n      }\n      tokens.forEach((server, index) => {\n        for (var i = 0; i < containers.length; i++)\n          nodes.push(<Container\n            key={index.toString() + i}\n            index={++ind}\n            setState={setParentState}\n            host={server.host}\n            port={ports[i]}\n            container={containers[i]}\n            token={server.token}\n            showAllLogs={showAllLogs}\n          />)\n      });\n      setNodes(nodes);\n    }\n    setNodes([]);\n    setState([]);\n    fetchTokens();\n    fetchProcessed();\n    setInterval(fetchProcessed, 3000);\n  }, [page, showAllLogs])\n\n  useEffect(() => {\n    changeDate({\n      target: {\n        value: startDate\n      }\n    });\n  }, [processed])\n\n  const fetchProcessed = () => {\n    axios('http://34.227.172.54:4000/processed', {\n      method: 'POST',\n      params: {\n        StartDate: \"2020-11\",\n        EndDate: moment().utcOffset('+00:00').endOf('day').format('YYYY-MM-DDTHH:mm')\n      }\n    })\n      .then(function (response) {\n        setProcessed(response.data);\n      })\n      .catch(() => { });\n  }\n\n  const nodes = state.filter(st => servers.filter((server, index) =>\n    index < page * 6 && index >= (page - 1) * 6).includes(st.id.split('_')[0]));\n  const Total = nodes.filter(st => st.state).length;\n  const Running = nodes.filter(st => st.state && st.state.toString().includes('Running')).length;\n  const Stopped = nodes.filter(st => st.state && st.state.toString().includes('Stopped')).length;\n  const Finished = nodes.filter(st => st.state && st.state.toString().includes('Finished')).length;\n\n  return <div>\n    <div className={NodeList.length && classes.header} id=\"header\">\n      <Typography\n        variant=\"h4\"\n        gutterBottom\n        align=\"center\"\n        style={{ cursor: \"pointer\" }}\n        onClick={() => hideAllLogs(!showAllLogs)}\n      >\n        Portainer Service | Made By BKP\n      </Typography>\n      {`Total Containers: ${Total} | Running: ${Running} | Finished: ${Finished} | Stopped: ${Stopped}`}\n      <div style={{ marginTop: \"8px\", position: \"absolute\" }}>\n        {`Finished: ${processed} | `}\n        <input\n          onChange={changeDate}\n          style={{ width: \"175px\" }}\n          type=\"datetime-local\"\n          value={startDate}\n        />\n        {` | ${count}`}\n      </div>\n      <div style={{ float: \"right\", marginTop: \"8px\", marginRight: \"32px\" }}>\n        {Array.range(0, servers.length % 6 ? servers.length / 6 + 1 : servers.length / 6)\n          .map(item => <Button\n            style={{ marginRight: \"10px\" }}\n            key={item}\n            variant=\"contained\"\n            color={item === page - 1 ? \"primary\" : \"default\"}\n            onClick={setActive(item + 1)}>\n            {item + 1}\n          </Button>)}\n      </div>\n    </div>\n    {NodeList.length ? <AppContainer className={classes.root}>{NodeList}</AppContainer>\n      : <LinearProgress className={classes.progress} />}\n  </div>\n}\n\nexport default App;\n","import React, { Fragment } from 'react';\r\nimport App from './App';\r\n\r\nconst Root = () => {\r\n    const activePage = window.location.hash.replace('#', '') || 1;\r\n    const setActive = page => () => {\r\n        window.location.hash = page;\r\n        window.location.reload();\r\n    };\r\n    return <Fragment>\r\n        <App page={parseInt(activePage)} setActive={setActive} />\r\n    </Fragment>\r\n}\r\n\r\nexport default Root;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from './Root';\n\nReactDOM.render(<Root />, document.getElementById('root'));"],"sourceRoot":""}